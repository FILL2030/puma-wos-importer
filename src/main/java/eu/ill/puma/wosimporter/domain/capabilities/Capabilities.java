/*
 * Copyright 2019 Institut Laueâ€“Langevin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Importer Api
 * importer api to launch importer a send documen to the pcc
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.ill.puma.wosimporter.domain.capabilities;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Capabilities
 */
public class Capabilities {
	@JsonProperty("importerName")
	private String importerName = null;

	@JsonProperty("importerShortName")
	@ApiModelProperty(value = "the shortName of the importer")
	private String importerShortName = null;

	private String version;

	@JsonProperty("metaDataAnalysisState")
	@ApiModelProperty(value = "")
	private MetaDataAnalysisState metaDataAnalysisState = null;

	@JsonProperty("supportedOperations")
	@ApiModelProperty(value = "")
	private SupportedOperations supportedOperations = null;

	@JsonProperty("supportedQueryFilter")
	@ApiModelProperty(value = "")
	private SupportedQueryFilter supportedQueryFilter = null;

	public Capabilities importerName(String importerName) {
		this.importerName = importerName;
		return this;
	}

	public String getImporterName() {
		return importerName;
	}

	public void setImporterName(String importerName) {
		this.importerName = importerName;
	}

	public String getImporterShortName() {
		return importerShortName;
	}

	public void setImporterShortName(String importerShortName) {
		this.importerShortName = importerShortName;
	}

	public String getVersion() {
		return version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	public MetaDataAnalysisState getMetaDataAnalysisState() {
		return metaDataAnalysisState;
	}

	public void setMetaDataAnalysisState(MetaDataAnalysisState metaDataAnalysisState) {
		this.metaDataAnalysisState = metaDataAnalysisState;
	}

	public SupportedOperations getSupportedOperations() {
		return supportedOperations;
	}

	public void setSupportedOperations(SupportedOperations supportedOperations) {
		this.supportedOperations = supportedOperations;
	}

	public SupportedQueryFilter getSupportedQueryFilter() {
		return supportedQueryFilter;
	}

	public void setSupportedQueryFilter(SupportedQueryFilter supportedQueryFilter) {
		this.supportedQueryFilter = supportedQueryFilter;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		Capabilities that = (Capabilities) o;
		return Objects.equals(importerName, that.importerName) &&
				Objects.equals(importerShortName, that.importerShortName) &&
				Objects.equals(version, that.version) &&
				Objects.equals(metaDataAnalysisState, that.metaDataAnalysisState) &&
				Objects.equals(supportedOperations, that.supportedOperations) &&
				Objects.equals(supportedQueryFilter, that.supportedQueryFilter);
	}

	@Override
	public int hashCode() {
		return Objects.hash(importerName, importerShortName, version, metaDataAnalysisState, supportedOperations, supportedQueryFilter);
	}
}

