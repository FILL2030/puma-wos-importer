/*
 * Copyright 2019 Institut Laueâ€“Langevin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.thomsonreuters.wokmws.cxf.auth;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WOKMWSAuthenticateService", targetNamespace = "http://auth.cxf.wokmws.thomsonreuters.com", wsdlLocation = "http://search.webofknowledge.com/esti/wokmws/ws/WOKMWSAuthenticate?wsdl")
public class WOKMWSAuthenticateService
    extends Service
{

    private final static URL WOKMWSAUTHENTICATESERVICE_WSDL_LOCATION;
    private final static WebServiceException WOKMWSAUTHENTICATESERVICE_EXCEPTION;
    private final static QName WOKMWSAUTHENTICATESERVICE_QNAME = new QName("http://auth.cxf.wokmws.thomsonreuters.com", "WOKMWSAuthenticateService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://search.webofknowledge.com/esti/wokmws/ws/WOKMWSAuthenticate?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WOKMWSAUTHENTICATESERVICE_WSDL_LOCATION = url;
        WOKMWSAUTHENTICATESERVICE_EXCEPTION = e;
    }

    public WOKMWSAuthenticateService() {
        super(__getWsdlLocation(), WOKMWSAUTHENTICATESERVICE_QNAME);
    }

    public WOKMWSAuthenticateService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WOKMWSAUTHENTICATESERVICE_QNAME, features);
    }

    public WOKMWSAuthenticateService(URL wsdlLocation) {
        super(wsdlLocation, WOKMWSAUTHENTICATESERVICE_QNAME);
    }

    public WOKMWSAuthenticateService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WOKMWSAUTHENTICATESERVICE_QNAME, features);
    }

    public WOKMWSAuthenticateService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WOKMWSAuthenticateService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WOKMWSAuthenticate
     */
    @WebEndpoint(name = "WOKMWSAuthenticatePort")
    public WOKMWSAuthenticate getWOKMWSAuthenticatePort() {
        return super.getPort(new QName("http://auth.cxf.wokmws.thomsonreuters.com", "WOKMWSAuthenticatePort"), WOKMWSAuthenticate.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WOKMWSAuthenticate
     */
    @WebEndpoint(name = "WOKMWSAuthenticatePort")
    public WOKMWSAuthenticate getWOKMWSAuthenticatePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://auth.cxf.wokmws.thomsonreuters.com", "WOKMWSAuthenticatePort"), WOKMWSAuthenticate.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WOKMWSAUTHENTICATESERVICE_EXCEPTION!= null) {
            throw WOKMWSAUTHENTICATESERVICE_EXCEPTION;
        }
        return WOKMWSAUTHENTICATESERVICE_WSDL_LOCATION;
    }

}
